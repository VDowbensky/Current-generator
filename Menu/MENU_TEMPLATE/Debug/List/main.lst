###############################################################################
#                                                                             #
# IAR C/C++ Compiler V6.12.1.50500 for Atmel AVR        11/Feb/2015  02:09:26 #
# Copyright 1996-2012 IAR Systems AB.                                         #
#                                                                             #
#    Source file  =  G:\Work\Projects\ATMEL\IAR\C\MENU_TEMPLATE\main.c        #
#    Command line =  --string_literals_in_flash G:\Work\Projects\ATMEL\IAR\C\ #
#                    MENU_TEMPLATE\main.c --cpu=m32a -ms -o                   #
#                    G:\Work\Projects\ATMEL\IAR\C\MENU_TEMPLATE\Debug\Obj\    #
#                    -lCN G:\Work\Projects\ATMEL\IAR\C\MENU_TEMPLATE\Debug\Li #
#                    st\ --initializers_in_flash --debug                      #
#                    -DENABLE_BIT_DEFINITIONS -e --eeprom_size 1024 --clib    #
#                    -Ohz                                                     #
#    List file    =  G:\Work\Projects\ATMEL\IAR\C\MENU_TEMPLATE\Debug\List\ma #
#                    in.lst                                                   #
#    Object file  =  G:\Work\Projects\ATMEL\IAR\C\MENU_TEMPLATE\Debug\Obj\mai #
#                    n.r90                                                    #
#                                                                             #
#                                                                             #
###############################################################################

G:\Work\Projects\ATMEL\IAR\C\MENU_TEMPLATE\main.c
      1          //========================================================================
      2          #include "main_def_func.h" // Заголовочные файлы, глобальные определения, общие функции.
      3          //========================================================================
      4          
      5          //========================================================================

   \                                 In  segment CODE, align 2, keep-with-next
      6          void main (void)
   \                     main:
      7          {
      8             wdt_enable (WDTO_15_MS);
   \   00000000   E000               LDI     R16, 0
   \   00000002   ........           CALL    wdt_enable
      9          
     10             init_sys_timer ();
   \   00000006   ........           CALL    init_sys_timer
     11          
     12             __enable_interrupt ();
   \   0000000A   9478               SEI
     13          
     14             Init_Events ();
   \   0000000C   ........           CALL    Init_Events
     15          
     16             while (1)
     17             {
     18                __watchdog_reset ();
   \                     ??main_0:
   \   00000010   95A8               WDR
     19          
     20                service_timers ();
   \   00000012   ........           CALL    service_timers
     21          
     22                drv_char_dsp ();
   \   00000016   ........           CALL    drv_char_dsp
     23          
     24                tui_service ();
   \   0000001A   ........           CALL    tui_service
     25          
     26                Process_Events ();
   \   0000001E   ........           CALL    Process_Events
   \   00000022   CFF6               RJMP    ??main_0
     27             }
     28          }
     29          //========================================================================

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
       0      2  main
                   0 2 -> Init_Events
                   0 2 -> Process_Events
                   0 2 -> drv_char_dsp
                   0 2 -> init_sys_timer
                   0 2 -> service_timers
                   0 2 -> tui_service
                   0 2 -> wdt_enable


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      36  main

 
 36 bytes in segment CODE
 
 36 bytes of CODE memory

Errors: none
Warnings: none
